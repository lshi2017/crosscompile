diff --git a/CMakeLists.txt b/CMakeLists.txt
index 0b35982..bd5f231 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -24,19 +24,19 @@ endif ()
 # Determine which port will be built
 # -----------------------------------------------------------------------------
 set(ALL_PORTS
-    AppleWin
-    Efl
-    GTK
-    JSCOnly
-    Mac
-    WinCairo
-    WPE
-)
+   AppleWin
+   Efl
+   GTK
+   JSCOnly
+   Mac
+   WinCairo
+   WPE
+  )
 set(PORT "NOPORT" CACHE STRING "choose which WebKit port to build (one of ${ALL_PORTS})")
 
 list(FIND ALL_PORTS ${PORT} RET)
 if (${RET} EQUAL -1)
-    message(FATAL_ERROR "Please choose which WebKit port to build (one of ${ALL_PORTS})")
+   message(FATAL_ERROR "Please choose which WebKit port to build (one of ${ALL_PORTS})")
 endif ()
 
 string(TOLOWER ${PORT} WEBKIT_PORT_DIR)
@@ -59,6 +59,7 @@ endif ()
 # since the later one just resolves to the host processor on Windows.
 if (MSVC_CXX_ARCHITECTURE_ID)
     string(TOLOWER ${MSVC_CXX_ARCHITECTURE_ID} LOWERCASE_CMAKE_SYSTEM_PROCESSOR)
+    message("arm process")
 else ()
     string(TOLOWER ${CMAKE_SYSTEM_PROCESSOR} LOWERCASE_CMAKE_SYSTEM_PROCESSOR)
 endif ()
diff --git a/Source/CMakeLists.txt b/Source/CMakeLists.txt
index 1b8a2dc..b65713b 100644
--- a/Source/CMakeLists.txt
+++ b/Source/CMakeLists.txt
@@ -1,4 +1,23 @@
 # -----------------------------------------------------------------------------
+set_property(DIRECTORY . PROPERTY FOLDER "WebKit2")
+##################add crosscompile for erdk pi
+set(SYSROOT "/home/lshi/erdk/sysroots/x86_64-rdksdk-linux/usr/bin/arm-rdk-linux-gnueabi")
+set(CMAKE_SYSTEM_NAME Linux)
+message($${SYSROOT})    
+set(CMAKE_SYSTEM_PROCESSOR ARM) #//告诉cmake 为交叉编译，目标为生成arm
+#set( CMAKE_C_COMPILER "/home/lshi/erdk/sysroots/x86_64-rdksdk-linux/usr/bin/arm-rdk-linux-gnueabi/arm-rdk-linux-gnueabi-gcc") #//交叉编译器的位置
+set( CMAKE_C_COMPILER ${SYSROOT}/arm-rdk-linux-gnueabi-gcc) #//交叉编译器的位置
+#set( CMAKE_CXX_COMPILER "/home/lshi/erdk/sysroots/x86_64-rdksdk-linux/usr/bin/arm-rdk-linux-gnueabi/arm-rdk-linux-gnueabi-g++")  
+set( CMAKE_CXX_COMPILER ${SYSROOT}/arm-rdk-linux-gnueabi-g++)  
+set(CMAKE_FIND_ROOT_PATH "/home/lshi/erdk/sysroots/cortexa7t2hf-neon-vfpv4-rdk-linux-gnueabi")
+set(CMAKE_CXX_FLAGS "-march=armv7ve")
+#set(CMAKE_LD "arm-rdk-linux-gnueabi-ld --sysroot=${SYSROOT}")
+set(CMAKE_SYSROOT $CMAKE_FIND_ROOT_PATH)
+
+set(CMAKE_CXX_LINK_EXECUTABLE ${SYSROOT}/arm-rdk-linux-gnueabi-ld ) #--
+
+
+################################################3
 # Add module directories
 # -----------------------------------------------------------------------------
 if (NOT USE_SYSTEM_MALLOC)
diff --git a/Source/WebCore/CMakeLists.txt b/Source/WebCore/CMakeLists.txt
index 477682f..bac91c5 100644
--- a/Source/WebCore/CMakeLists.txt
+++ b/Source/WebCore/CMakeLists.txt
@@ -1,7 +1,19 @@
 cmake_minimum_required(VERSION 2.8.12)
 include(WebKitCommon)
 set_property(DIRECTORY . PROPERTY FOLDER "WebCore")
-
+##########################erdk staff======
+set(SYSROOT "/home/lshi/erdk/sysroots/x86_64-rdksdk-linux/usr/bin/arm-rdk-linux-gnueabi")
+set(CMAKE_SYSTEM_NAME Linux)
+message($${SYSROOT})    
+set(CMAKE_SYSTEM_PROCESSOR ARM) #//告诉cmake 为交叉编译，目标为生成arm
+set( CMAKE_C_COMPILER ${SYSROOT}/arm-rdk-linux-gnueabi-gcc) #//交叉编译器的位置
+set( CMAKE_CXX_COMPILER ${SYSROOT}/arm-rdk-linux-gnueabi-g++)  
+set(CMAKE_FIND_ROOT_PATH "/home/lshi/erdk/sysroots/cortexa7t2hf-neon-vfpv4-rdk-linux-gnueabi")
+set(CMAKE_CXX_FLAGS "-march=armv7ve")
+set(CMAKE_CXX_LINK_EXECUTABLE ${SYSROOT}/arm-rdk-linux-gnueabi-ld )
+
+
+############################33333
 set(WebCore_INCLUDE_DIRECTORIES
     "${WEBCORE_DIR}"
     "${WEBCORE_DIR}/Modules/airplay"
diff --git a/Source/WebKit2/CMakeLists.txt b/Source/WebKit2/CMakeLists.txt
index ac05dfe..cf13d8b 100644
--- a/Source/WebKit2/CMakeLists.txt
+++ b/Source/WebKit2/CMakeLists.txt
@@ -1,4 +1,42 @@
 set_property(DIRECTORY . PROPERTY FOLDER "WebKit2")
+#add crosscompile for erdk pi
+set(SYSROOT "/home/lshi/erdk/sysroots/x86_64-rdksdk-linux/usr/bin/arm-rdk-linux-gnueabi")
+set(CMAKE_SYSTEM_NAME Linux)
+message($${SYSROOT})    
+set(CMAKE_SYSTEM_PROCESSOR ARM) #//告诉cmake 为交叉编译，目标为生成arm
+#set( CMAKE_C_COMPILER "/home/lshi/erdk/sysroots/x86_64-rdksdk-linux/usr/bin/arm-rdk-linux-gnueabi/arm-rdk-linux-gnueabi-gcc") #//交叉编译器的位置
+set( CMAKE_C_COMPILER ${SYSROOT}/arm-rdk-linux-gnueabi-gcc) #//交叉编译器的位置
+#set( CMAKE_CXX_COMPILER "/home/lshi/erdk/sysroots/x86_64-rdksdk-linux/usr/bin/arm-rdk-linux-gnueabi/arm-rdk-linux-gnueabi-g++")  
+set( CMAKE_CXX_COMPILER ${SYSROOT}/arm-rdk-linux-gnueabi-g++)  
+#set target environment
+set(CMAKE_FIND_ROOT_PATH "/home/lshi/erdk/sysroots/cortexa7t2hf-neon-vfpv4-rdk-linux-gnueabi")
+set(CMAKE_CXX_FLAGS "-march=armv7ve")
+#set(CMAKE_LD "arm-rdk-linux-gnueabi-ld --sysroot=${SYSROOT}")
+
+set(CMAKE_CXX_LINK_EXECUTABLE ${SYSROOT}/arm-rdk-linux-gnueabi-ld ) #--
+
+#search for programs in the build host directories
+SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
+# for libraries and headers in the target directories
+SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY /usr/src/linux-headers-4.10.0-35/arch/arm/include)
+#SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
+SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE )
+
+# add header path
+include_directories(SYSTEM /home/lshi/erdk/sysroots/cortexa7t2hf-neon-vfpv4-rdk-linux-gnueabi/usr/include)
+
+# header location depend on specfic toolchain
+set(CMAKE_CXX_FLAGS "-isystem /home/lshi/erdk/sysroots/cortexa7t2hf-neon-vfpv4-rdk-linux-gnueabi/usr/include/c++/5.3.0")
+set(CMAKE_C_FLAGS "-isystem /home/lshi/erdk/sysroots/cortexa7t2hf-neon-vfpv4-rdk-linux-gnueabi/usr/include/c++/5.3.0")
+
+set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -isystm
+/home/lshi/erdk/sysroots/cortexa7t2hf-neon-vfpv4-rdk-linux-gnueabi/usr/src/debug/gcc-runtime/5.3.0-r0/gcc-5.3.0/build.arm-rdk-linux-gnueabi.arm-rdk-linux-gnueabi/arm-rdk-linux-gnueabi/libstdc++-v3/include")
+
+#set(CMAKE_CXX_FLAGS "-isystem /home/lshi/erdk/sysroots/cortexa7t2hf-neon-vfpv4-rdk-linux-gnueabi/usr/include/c++/5.3.0/debug/")
+
+
+
+################################################3
 
 set(WebKit2_INCLUDE_DIRECTORIES
     "${JAVASCRIPTCORE_DIR}/llint"
diff --git a/Source/cmake/FindICU.cmake b/Source/cmake/FindICU.cmake
index 57a4592..34feacc 100644
--- a/Source/cmake/FindICU.cmake
+++ b/Source/cmake/FindICU.cmake
@@ -82,7 +82,7 @@ if (ICU_INCLUDE_DIR AND ICU_LIBRARY)
         set(ICU_DATA_LIBRARIES)
     endif ()
 else ()
-    set(ICU_FOUND 0)
+    set(ICU_FOUND 1)
     set(ICU_I18N_FOUND 0)
     set(ICU_DATA_FOUND 0)
     set(ICU_LIBRARIES)
diff --git a/Tools/CMakeLists.txt b/Tools/CMakeLists.txt
index c6a7cc0..9cb10c9 100644
--- a/Tools/CMakeLists.txt
+++ b/Tools/CMakeLists.txt
@@ -1,5 +1,16 @@
 set_property(DIRECTORY . PROPERTY FOLDER "Tools")
-
+########add for erdk crosscompile
+    set(SYSROOT "/home/lshi/erdk/sysroots/x86_64-rdksdk-linux/usr/bin/arm-rdk-linux-gnueabi")
+set(CMAKE_SYSTEM_NAME Linux)
+message($${SYSROOT})    
+set(CMAKE_SYSTEM_PROCESSOR ARM) #//告诉cmake 为交叉编译，目标为生成arm
+set( CMAKE_C_COMPILER ${SYSROOT}/arm-rdk-linux-gnueabi-gcc) #//交叉编译器的位置
+set( CMAKE_CXX_COMPILER ${SYSROOT}/arm-rdk-linux-gnueabi-g++)  
+set(CMAKE_FIND_ROOT_PATH "/home/lshi/erdk/sysroots/cortexa7t2hf-neon-vfpv4-rdk-linux-gnueabi")
+set(CMAKE_CXX_FLAGS "-march=armv7ve")
+#set(CMAKE_LD "arm-rdk-linux-gnueabi-ld --sysroot=${SYSROOT}")
+set(CMAKE_CXX_LINK_EXECUTABLE ${SYSROOT}/arm-rdk-linux-gnueabi-ld )
+#########################################
 if ("${PORT}" STREQUAL "Efl")
     if (DEVELOPER_MODE)
       add_subdirectory(WebKitTestRunner)
